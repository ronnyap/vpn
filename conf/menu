#!/bin/bash

function create_user() {
	useradd -M $uname
	echo "$uname:$pass" | chpasswd
	usermod -e $expdate $uname

	echo ""
	echo "Terbaik Bos! Berjaya"
}

function renew_user() {
	echo "New expiration date for $uname: $expdate...";
	usermod -e $expdate $uname
}

function delete_user(){
	userdel $uname
}

function expired_users(){
	cat /etc/shadow | cut -d: -f1,8 | sed /:$/d > /tmp/expirelist.txt
	totalaccounts=`cat /tmp/expirelist.txt | wc -l`
	for((i=1; i<=$totalaccounts; i++ )); do
		tuserval=`head -n $i /tmp/expirelist.txt | tail -n 1`
		username=`echo $tuserval | cut -f1 -d:`
		userexp=`echo $tuserval | cut -f2 -d:`
		userexpireinseconds=$(( $userexp * 86400 ))
		todaystime=`date +%s`
		if [ $userexpireinseconds -lt $todaystime ] ; then
			echo $username
		fi
	done
	rm /tmp/expirelist.txt
}

function not_expired_users(){
    cat /etc/shadow | cut -d: -f1,8 | sed /:$/d > /tmp/expirelist.txt
    totalaccounts=`cat /tmp/expirelist.txt | wc -l`
    for((i=1; i<=$totalaccounts; i++ )); do
        tuserval=`head -n $i /tmp/expirelist.txt | tail -n 1`
        username=`echo $tuserval | cut -f1 -d:`
        userexp=`echo $tuserval | cut -f2 -d:`
        userexpireinseconds=$(( $userexp * 86400 ))
        todaystime=`date +%s`
        if [ $userexpireinseconds -gt $todaystime ] ; then
            echo $username
        fi
    done
	rm /tmp/expirelist.txt
}

function used_data(){
	myip=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0' | head -n1`
	myint=`ifconfig | grep -B1 "inet addr:$myip" | head -n1 | awk '{print $1}'`
	ifconfig $myint | grep "RX bytes" | sed -e 's/ *RX [a-z:0-9]*/Received: /g' | sed -e 's/TX [a-z:0-9]*/\nTransfered: /g'
}

function monitor_login_dropbear(){
        data=( `ps aux | grep -i dropbear | awk '{print $2}'`);
echo "----------------------------------------------"
echo "Checking Dropbear login" | lolcat;
echo "----------------------------------------------"
echo "   PID.  USERNAME.       IP" | lolcat
echo "----------------------------------------------"

for PID in "${data[@]}"
do
	#echo "check $PID";
	NUM=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | wc -l`;
	username=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk '{print $10}'`;
	IP=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk '{print $12}'`;
	if [ $NUM -eq 1 ]; then
		echo "$PID - $username - $IP";
	fi
done

echo "";

data=( `ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'`);
echo "----------------------------------------------"
echo "Checking OpenSSH login" | lolcat;
echo "----------------------------------------------"
for PID in "${data[@]}"
do
	#echo "check $PID";
	NUM=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | wc -l`;
	username=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $9}'`;
	IP=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $11}'`;
	if [ $NUM -eq 1 ]; then
		echo "$PID - $username - $IP";
	fi
done

#echo "";

#echo "-----------------------------------"
#echo "Checking OpenVPN login" | lolcat;
#echo "-----------------------------------"
#tail -f /etc/openvpn/server-vpn.log

	echo " DEVELOPED BY SYAHZ86 "| lolcat
echo "----------------------------------------------------------------"
echo ""
}

clear
PS3='Please enter your choice: '
options=("Add User" "Renew User" "Delete User" "Current Connected Users" "User List" "Ram Status" "Users Not Expired" "Expired Users" "Used Data By Users" "Monitor Login Dropbear" "Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Add User")
            read -p "Enter username: " uname
            read -p "Enter password: " pass
            read -p "Enter expiry date (YYYY-MM-DD): " expdate
	    create_user
	    break
            ;;
        "Renew User")
            read -p "Enter username to renew: " uname
            read -p "Enter expiry date (YYYY-MM-DD): " expdate
            renew_user
            break
            ;;
        "Delete User")
            read -p "Enter username to be removed: " uname
            delete_user
            break
            ;;
		"Current Connected Users")
            who -T | tr -s ' ' | cut -d ' ' -f 1-2 | sort -u
            break
            ;;		
		"User List")
            /root/status
            break
            ;;	
		"Ram Status")
		    free -h | grep -v + > /tmp/ramcache
            cat /tmp/ramcache | grep -v "Swap"
            break
            ;;	
		"Users Not Expired")
			not_expired_users
			break
			;;
		"Expired Users")
			expired_users
			break
			;;
		"Used Data By Users")
			used_data
			break
			;;
		"Monitor Login Dropbear")
		        clear
	                user-login
		        break
                        ;;
        "Quit")
            break
            ;;
        *) echo invalid option;;
    esac
done
